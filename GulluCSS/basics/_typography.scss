@use '../basics/colors' as c;
@use 'sass:list';
@use 'sass:string';
@use 'sass:map' as mp;

/*
Sass lists are 1-based. The first list item in a list is at index 1, not 0.
append(list, value, [separator])	Adds a single value to the end of the list. separator can be auto, comma, or space. auto is default.
index(list, value) Returns the index position for the value in list.
is-bracketed(list)	Checks whether the list has square brackets.
join(list1, list2, [separator, bracketed])	Appends list2 to the end of list1. separator can be auto, comma, or space. auto is default (will use the separator in the first list).
bracketed can be auto, true, or false. auto is default.
length(list)	Returns the length of the list.
list-separator(list)	Returns the list separator used, as a string. Can be either space or comma.
nth(list, n)	Returns the nth element in the list.
set-nth(list, n, value)	Sets the nth list element to the value specified.
zip(lists)	Combines lists into a single multidimensional list.
*/

/*
quote(string)	Adds quotes to string, and returns the result.
str-index(string, substring)	Returns the index of the first occurrence of the substring within string.
str-insert(string, string2, index)	Returns string with string2 inserted at the specified index position.
str-length(string)	Returns the length of string (in characters).
str-slice(string, start, end)	Extracts characters from string; start at start and end at end, and returns the slice.
to-lower-case(string)	Returns a copy of string converted to lower case.
to-upper-case(string)	Returns a copy of string converted to upper case.
unique-id()	Returns a unique randomly generated unquoted string (guaranteed to be unique within the current sass session).
unquote(string)	Removes quotes around string (if any), and returns the result.
*/

$font-size : 1em;
$font-family : 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
$font-weight : bold;

p{
    font-size: $font-size;
    font-family: $font-family;
}

$font_sizes:(
    'xs': 1em,
    's': 2em,
    'm': 3em,
    'l': 4em,
    'xl': 5em,
    'xxl': 6em,
    'xxxl': 7em
);

@each $k,$v in $font-sizes
{
    .#{$k}-font{
        font-size: map-get($map: $font_sizes, $key:$k );
    }
}

